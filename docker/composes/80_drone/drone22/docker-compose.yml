version: "3"

services:
  drone:
    image: drone/drone:2.2
    container_name: drone
    restart: always
    ports:
      - "19080:80"
    networks:
      net_drone:
    volumes:
      - ./:/data
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: "200k"
        max-file: "5"
    environment:
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: ${DRONE_SERVER_HOST}
      DRONE_SERVER_PROTO: http  # 認證 https 有點問題
      DRONE_LOGS_COLOR: 1
      DRONE_LOGS_PRETTY: 1
      DRONE_GITEA_SERVER: ${DRONE_GITEA_SERVER}
      DRONE_GITEA_CLIENT_ID: ${DRONE_GITEA_CLIENT_ID}
      DRONE_GITEA_CLIENT_SECRET: ${DRONE_GITEA_CLIENT_SECRET}
      DRONE_USER_CREATE: ${DRONE_USER_CREATE}

  drone-runner-docker:
    image: drone/drone-runner-docker:1.6.3
    container_name: runner
    restart: always
    environment:
      DRONE_RPC_PROTO: http
      DRONE_RPC_HOST: drone
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_RUNNER_CAPACITY: 3
      DRONE_RUNNER_NAME: docker-runner
      DRONE_DEBUG: ${DRONE_DEBUG}
      DRONE_TRACE: ${DRONE_TRACE}
      DRONE_RPC_DUMP_HTTP: ${DRONE_RPC_DUMP_HTTP}
      DRONE_RPC_DUMP_HTTP_BODY: ${DRONE_RPC_DUMP_HTTP_BODY}
      DRONE_UI_USERNAME: ${DRONE_UI_USERNAME}
      DRONE_UI_PASSWORD: ${DRONE_UI_PASSWORD}
    ports:
      - "13000:3000"
    networks:
      net_drone:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  net_drone:
    name: net_drone